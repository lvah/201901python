"""
文件名: $NAME.py
日期: 22  
作者: lvah
联系: xc_guofan@qq.com
代码描述: 

# 1. 协程概念
    协程,又称微线程,纤程,英文名Coroutine。协程的作用,是在执行函数A时,可以随时中断,
    去执行函数B,然后中断继续执行函数A(可以自由切换)。但这一过程并不是函数调用(没有调
    用语句),这一整个过程看似像多线程,*****然而协程只有一个线程执行************。
# 2. 协程优势
    - 执行效率极高,因为子程序切换(函数)不是线程切换,由程序自身控制,
    没有切换线程的开销。所以与多线程相比,线程的数量越多,协程性能的优势越明显。
    - 不需要多线程的锁机制,因为只有一个线程,也不存在同时写变量冲突,在控制共
    享资源时也不需要加锁,因此执行效率高很多。

    说明:协程可以处理 IO 密集型程序的效率, 但是处理 CPU 密集型不是它的长处,
    如要充分发挥 CPU 利用率可以结合多进程 + 协程。




"""
from collections import Iterable


def job():
    for i in range(10):
        print(i)
        yield  "result: %s" %(i)

# 函数里面包含yield关键字， 调用函数返回的是生成器对象;
# yield工作原理: 如果遇到yield就停止运行， 调用next方法， 从yield停止的地方继续运行;
j = job()

# j.__next__()
# print(next(j))


# print(isinstance(j, Iterable))
for i in j:
    print(i)